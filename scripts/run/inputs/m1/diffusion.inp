<comment> # ===================================================================
# additional comments (such as e.g. compilation parameters go here)
# ...
# =============================================================================

<job> # =======================================================================
problem_id = diffusion
# =============================================================================

<time> # ======================================================================
cfl_number   = 0.65
tlim	       = 2
ncycle_out   = 1      # interval for stdout summary info
# =============================================================================

<mesh> # ======================================================================
# no. cell in dir, min/max x, inner/outer BC
nx1    = 240
x1min  = -4
x1max  = 4
ix1_bc = outflow
ox1_bc = outflow

nx2    = 4
x2min  = -1
x2max  = 1
ix2_bc = outflow
ox2_bc = outflow

nx3    = 4
x3min  = -1
x3max  = 1
ix3_bc = outflow
ox3_bc = outflow

refinement = none
num_threads = 8
# =============================================================================

<meshblock> # =================================================================
nx1 = 20
nx2 = 4
nx3 = 4
# =============================================================================

<M1> # ========================================================================
ngroups  = 2
nspecies = 3

# element of:
# {thin,
#  thick,
#  Minerbo,    - Brent-Dekker (GSL based)
#  MinerboP    - Picard
#  MinerboN    - Newton-Raphson
# }
closure_variety = Minerbo

# element of: {approximate, exact_thin, exact_thick, exact_Minerbo}
characteristics_variety = approximate

# element of: {fluid, mixed, zero, none}
fiducial_velocity = fluid

# element of:
# {full_explicit,                - non-stiff regime
#  semi_implicit_PicardFrozenP   - only for fixed (P_dd)
#  semi_implicit_PicardMinerboP  - updates P_dd based on Minerbo;
#                                  Closure is iterated as part of imp.
#  semi_implicit_PicardMinerboPC - close explicit iter; iter; close conv.
#  semi_implicit_Hybrids         - GSL: FD approx. of J
#  semi_implicit_HybridsJFrozenP - GSL: Jacobian for fixed (E, F indep.) P_dd
#  semi_implicit_HybridsJMinerbo - GSL: Jacobian for P_dd based on Minerbo
# }
integration_strategy = semi_implicit_HybridsJMinerbo

# tolerances / ad-hoc fiddle parameters
fl_E = 1e-15
fl_J = 1e-15
eps_E = 1e-5
eps_J = 1e-10

# [Minerbo] closure root tolerance & maximum iterations
eps_C          = 1e-8
eps_C_N        = 1e-10  // switch to Picard if deriv. below this
max_iter_C     = 64
max_iter_C_rst = 10
w_opt_ini_C    = 0.5
fac_amp_C      = 1.11   // error amplification tolerance between iterates
reset_thin     = false   // reset on failure to thin limit
verbose_iter_C = false

# [Picard] iteration settings
max_iter_P     = 1024    // maximum number of iterations (for each restart)
max_iter_P_rst = 10     // maximum number of restarts
w_opt_ini_P    = 1.0    // initial underrelaxation factor
eps_P_abs_tol  = 1e-8   // absolute tolerance
fac_amp_P      = 1.11   // error amplification tolerance between iterates
verbose_iter_P = true   // signal e.g. failure to achieve tol.

# =============================================================================

<M1_opacities> # ==============================================================
# element of: {zero, none}
variety = none
# =============================================================================

<problem> # ===================================================================
test = diffusion

# // E = 1 on [a,b]
b_x_a = -0.5
b_x_b =  0.5
rho   = 1.0
kap_s = 1000
# =============================================================================

<refinement1> # ===============================================================
x1min =  -0.2
x1max =  0.2
x2min = -1.0
x2max = -1.0
x3min = -1.0
x3max =  1.0
level = 2
# =============================================================================

# dumped quantities ===========================================================
# <output1>
# file_type = rst
# dt        = 1

<output2>
file_type   = hdf5
variable    = m1_lab
dt          = 0.1
ghost_zones = true

<output2>
file_type   = hdf5
variable    = m1_lab
dt          = 0.1
ghost_zones = true
x2_slice    = 0.0
x3_slice    = 0.0

<output3>
file_type   = hdf5
variable    = m1_lab_aux
dt          = 0.1
ghost_zones = true
x2_slice    = 0.0
x3_slice    = 0.0

#
# :D
#